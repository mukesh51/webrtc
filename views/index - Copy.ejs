<!DOCTYPE html>
<html>
<head>
	<title>WebRTC Sample</title>
	<link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
	<video id="videoTag" autoplay></video>
	<p><button id="takeProfilePicture" type="button" autofocus="true">Create Profile Picture</button></p>

	<canvas id="profilePicCanvas" style="display: none;"></canvas>
	<div>
		<img id="profilePictureOutput">
	</div>

	<script>
		navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

		var constraints = {
			audio: true,
			video: {
				mandatory: {
					minWidth: 240,
					maxWidth: 240,
					minHeight: 240,
					maxHeight: 240
				}				
			}
		};

		var videoArea = document.querySelector('video');
		var profilePicCanvas = document.querySelector('#profilePicCanvas');
		var profilePictureOutput = document.querySelector('#profilePictureOutput');
		var takePicButton = document.querySelector('#takeProfilePicture');
		var videoTag = document.querySelector('#videoTag');

		var width = 240; // Desired width of profile picture
		var height = 0; // Calculated later based on image ratio
		var streaming = false; // Used to determine when the video has loaded

		takePicButton.addEventListener('click', function(ev) {
			takeProfilePic();
			ev.preventDefault();
		}, false);

		videoTag.addEventListener('canplay', function(ev) {
			if(!streaming) {
				height = videoTag.videoHeight / (videoTag.videoWidth/width);

				if(isNaN(height)) {
					height = width / (4/3)
				}

				videoTag.setAttribute('width',width);
				videoTag.setAttribute('height',height);
				profilePicCanvas.setAttribute('width',width);
				profilePicCanvas.setAttribute('height',height);
				streaming = true;
			}
		}, false);

		function takeProfilePic() {
			var context = profilePicCanvas.getContext('2d');
			if(width && height) {
				profilePicCanvas.width = width;
				profilePicCanvas.height = height;
				context.drawImage(videoTag, 0,0,width,height);

				var data = profilePicCanvas.toDataURL('image/png');
				profilePictureOutput.setAttribute('src',data);

			}
		}
		
		navigator.getUserMedia(constraints, onSuccess, onError);

		function onSuccess(stream) {
			console.log("Got the video stream");
			videoArea.src = window.URL.createObjectURL(stream);
			videoArea.className="grayscale_filter";
			videoArea.play();
		}

		function onError(error) {
			console.log("Error in getting video stream : "+ error);
		}
	</script>
</body>
</html>